# Configuration file for runTests.sh
# Note the syntax "${RUNTESTS_...:=XXX}" that only
# sets the variable if not already existing from outside calls to this script.
# Also note that "export" is needed to propagate the environment variables back to runTests.sh
# IMPORTANT: ALL PATHS ARE RELATIVE TO ${RUNTESTS_DIR_ROOT} (usually this project root)

### Main directories
export RUNTESTS_DIR_ROOT="${RUNTESTS_DIR_ROOT:=../../}"
export RUNTESTS_DIR_BUILDER="${RUNTESTS_DIR_BUILDER:=.Build/vendor/typo3/runtests}"
export RUNTESTS_DIR_BUILD="${RUNTESTS_DIR_BUILD:=.Build}"
export RUNTESTS_DIR_VENDOR="${RUNTESTS_DIR_VENDOR:=.Build/vendor}"
export RUNTESTS_DIR_BIN="${RUNTESTS_DIR_BIN:=.Build/bin}"
export RUNTESTS_DIR_TESTTEMP="${RUNTESTS_DIR_TESTTEMP:=typo3temp/var/tests}"
export RUNTESTS_DIR_CACHE="${RUNTESTS_DIR_CACHE:=.cache}"
export RUNTESTS_DIR_CUSTOM="${RUNTESTS_DIR_CUSTOM:=.Build/Scripts}"

### Temporary directories
export RUNTESTS_DIRS_CACHE="$RUNTESTS_DIR_CACHE $RUNTESTS_DIR_TESTTEMP"
export RUNTESTS_DIRS_PROJECT="${RUNTESTS_DIRS_PROJECT:=packages}"
export RUNTESTS_DIRS_PROJECT_BUILD="${RUNTESTS_DIRS_PROJECT_BUILD:=packages}"

### Cleanup directories
export RUNTESTS_CLEANUP_BUILD="${RUNTESTS_CLEANUP_BUILD:=\
                                    .Build/JavaScript
                                    .Build/node_modules}"
export RUNTESTS_CLEANUP_CACHE="${RUNTESTS_CLEANUP_CACHE:=\
                                    .cache
                                    .Build/.cache
                                    .Build/composer/.cache/
                                    .php-cs-fixer.cache}"
export RUNTESTS_CLEANUP_COMPOSER="${RUNTESTS_CLEANUP_COMPOSER:=\
                                    .Build/composer/composer.json \
                                    .Build/composer/composer.lock \
                                    .Build/composer/public/index.php \
                                    .Build/composer/public/typo3 \
                                    .Build/composer/public/typo3conf/ext \
                                    .Build/composer/var/ \
                                    .Build/composer/vendor/}"
export RUNTESTS_CLEANUP_TESTS="${RUNTESTS_CLEANUP_TESTS:=\
                                    .Build/phpunit/FunctionalTests-Job-*.xml \
                                    typo3temp/var/tests/}"
export RUNTESTS_CLEANUP_DOCS="${RUNTESTS_CLEANUP_DOCS:=packages/*/Documentation-GENERATED-temp}"

export RUNTESTS_PHPSTAN_CONFIG_FILE_LOCAL="${RUNTESTS_PHPSTAN_CONFIG_FILE_LOCAL:=.Build/phpstan/phpstan.local.neon}"
export RUNTESTS_PHPSTAN_CONFIG_FILE_CI="${RUNTESTS_PHPSTAN_CONFIG_FILE_CI:=.Build/phpstan/phpstan.ci.neon}"
export RUNTESTS_PHPSTAN_BASELINE_FILE="${RUNTESTS_PHPSTAN_BASELINE_FILE:=.Build/phpstan/phpstan-baseline.neon}"
export RUNTESTS_PHPUNIT_FILE_UNITTEST="${RUNTESTS_PHPUNIT_FILE_UNITTEST:=.Build/phpunit/UnitTests.xml}"
export RUNTESTS_PHPUNIT_FILE_UNITTEST_DEPRECATED="${RUNTESTS_PHPUNIT_FILE_UNITTEST_DEPRECATED:=.Build/phpunit/UnitTestsDeprecated.xml}"
export RUNTESTS_PHPUNIT_FILE_FUNCTIONALTEST="${RUNTESTS_PHPUNIT_FILE_FUNCTIONALTEST:=.Build/phpunit/FunctionalTests.xml}"
export RUNTESTS_PHPUNIT_FILE_FUNCTIONALTEST_DEPRECATED="${RUNTESTS_PHPUNIT_FILE_FUNCTIONALTEST_DEPRECATED:=.Build/phpunit/FunctionalTestsDeprecated.xml}"
export RUNTESTS_DIR_PHPUNIT_FUNCTIONAL="${RUNTESTS_DIR_PHPUNIT_FUNCTIONAL:=.Build/phpunit}"
export RUNTESTS_CODECEPTION_CONFIG_FILE="${RUNTESTS_CODECEPTION_CONFIG_FILE:=.Build/codeception.yml}"
export RUNTESTS_PHPCSFIXER_CONFIG_FILE="${RUNTESTS_PHPCSFIXER_CONFIG_FILE:=.Build/php-cs-fixer/config.php}"
export RUNTESTS_PHPCSFIXER_HEADER_CONFIG_FILE="${RUNTESTS_PHPCSFIXER_HEADER_CONFIG_FILE:=.Build/php-cs-fixer/header-comment.php}"
export RUNTESTS_INTEGRITYCHECKER_CONFIG_FILE="${RUNTESTS_INTEGRITYCHECKER_CONFIG_FILE:=.Build/Scripts/phpIntegrityChecker.php}"

export RUNTESTS_COMMAND_BUILD_CSS="${RUNTESTS_COMMAND_BUILD_CSS:=cd .Build; npm ci || exit 1; node_modules/grunt/bin/grunt css}"
export RUNTESTS_COMMAND_BUILD_JS="${RUNTESTS_COMMAND_BUILD_JS:=cd .Build; npm ci || exit 1; node_modules/grunt/bin/grunt scripts}"
export RUNTESTS_COMMAND_BUILD_CLEAN="${RUNTESTS_COMMAND_BUILD_CLEAN:=find '${RUNTESTS_DIRS_PROJECT_BUILD}' -name '*.js' -not -path '*/Fixtures/*' -exec rm '{}' + && cd .Build; npm ci || exit 1; node_modules/grunt/bin/grunt build; cd ..; git add *; git status; git status | grep -q \"nothing to commit, working tree clean\"}"
export RUNTESTS_COMMAND_BUILD_LINT="${RUNTESTS_COMMAND_BUILD_LINT:=cd .Build; npm ci || exit 1; node_modules/grunt/bin/grunt exec:lintspaces}"
export RUNTESTS_COMMAND_BUILD_LINT_TS="${RUNTESTS_COMMAND_BUILD_LINT:=cd .Build; npm ci || exit 1; node_modules/grunt/bin/grunt eslint}"
export RUNTESTS_COMMAND_UNIT_JS="${RUNTESTS_COMMAND_UNIT_JS:=cd Build; npm ci || exit 1; CHROME_SANDBOX=false BROWSERS=chrome npm run test}"

## this repository provides its own for now:
export RUNTESTS_DIR_BUILDER="Build/Scripts"
